//Rotary Encoder
/*You will see the angular displacement of the rotary encoder printed on Serial Monitor. 
When you turn the rotary encoder clockwise, the angular displacement is increased;
when turn it counterclockwise, the displacement is decreased.
If you press the switch on the rotary encoder, the readings will return to zero.*/
//Email: support@sunfounder.com
//Website: www.sunfounder.com
//2015.5.7
 
const int clkPin= 2; //the clk attach to pin 2
const int dtPin= 3; //the dt pin attach to pin 3
const int swPin= 4;//the sw pin attach to pin 4
 
int encoderVal = 0;
int swCount = 1;
int swC = 1;
void setup()
{ 
//set clkPin,dePin,swPin as INPUT
pinMode(clkPin, INPUT);
pinMode(dtPin, INPUT);
pinMode(swPin, INPUT);
digitalWrite(swPin, HIGH);
Serial.begin(9600); // initialize serial communications at 9600 bps
 
}
 
void loop()
{
int change = getEncoderTurn();//

if(digitalRead(swPin) == HIGH){
  if(swCount >= 175 or swCount <= 5){
     if( swC >= 355 or swC <= 5){
  if (encoderVal >= 1 && encoderVal < 180){
encoderVal = encoderVal + change;
}else if(encoderVal >= 180){
  encoderVal = encoderVal -1 ;
}else if(encoderVal < 2){
  encoderVal = encoderVal +1;
}
}
  }
}

if(encoderVal >=0 && encoderVal < 5 && digitalRead(swPin) == LOW){
  if(swCount < 179 && swCount >=2){
  swCount = swCount + change;
}else if(swCount < 2){
  if(swCount = 1){
    swCount = swCount * 177;
  }else{
  swCount = swCount +1;}
}else if(swCount == 179){
  swCount = 3;
}
}

if (encoderVal > 175 && digitalRead(swPin) == LOW){
  if(swC < 359 && swC >=2){
    swC = swC + change;
  }else if (swC <2){
    if(swC = 1){
    swC = swC * 357;}else{
      swC = swC +1;} 
    }else if(swC = 359){
      swC=3;}
    }



  

if(swCount >= 0 ){
Serial.print(encoderVal);
Serial.print(",");
Serial.print(swCount);
Serial.print(",");
Serial.println(swC);
}
}
 
int getEncoderTurn(void){
  
static int oldA = HIGH; //set the oldA as HIGH
static int oldB = HIGH; //set the oldB as HIGH
int result = 0;
int newA = digitalRead(clkPin);//read the value of clkPin to newA
int newB = digitalRead(dtPin);//read the value of dtPin to newB
if (newA != oldA || newB != oldB) //if the value of clkPin or the dtPin has changed
{
// something has changed
if (oldA == HIGH && newA == LOW)
{
result = (oldB * 2 - 1);
}
}
oldA = newA;
oldB = newB;
return result;
}
